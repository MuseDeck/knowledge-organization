app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: MuseDeck AI Knowledge Organization
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/openai:0.1.0@539dc0dde8ecaa84e61b8eeb154c3bb7fbc9caa80afd83763dd5860a725d2742
kind: app
version: 0.3.1
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: if-else
      id: 1753329098823-source-1753343596013-target
      source: '1753329098823'
      sourceHandle: source
      target: '1753343596013'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1753343596013-true-1753343604349-target
      source: '1753343596013'
      sourceHandle: 'true'
      target: '1753343604349'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: agent
      id: 1753343596013-false-1753343607664-target
      source: '1753343596013'
      sourceHandle: 'false'
      target: '1753343607664'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: end
      id: 1753343604349-source-1753345039607-target
      selected: false
      source: '1753343604349'
      sourceHandle: source
      target: '1753345039607'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: agent
        targetType: llm
      id: 1753343607664-source-1753347678833-target
      selected: false
      source: '1753343607664'
      sourceHandle: source
      target: '1753347678833'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: end
      id: 1753347678833-source-1753345292270-target
      source: '1753347678833'
      sourceHandle: source
      target: '1753345292270'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Start
        type: start
        variables:
        - label: original_content
          max_length: null
          options: []
          required: true
          type: paragraph
          variable: original_content
        - label: content_type
          max_length: 48
          options:
          - ''
          required: true
          type: text-input
          variable: content_type
      height: 115
      id: '1753329098823'
      position:
        x: 81.85130164500299
        y: 282
      positionAbsolute:
        x: 81.85130164500299
        y: 282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: a65437d1-2c6d-451d-9a01-f17f480cc2e1
            value: text
            varType: string
            variable_selector:
            - '1753329098823'
            - content_type
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE
        type: if-else
      height: 125
      id: '1753343596013'
      position:
        x: 382.851301645003
        y: 282
      positionAbsolute:
        x: 382.851301645003
        y: 282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1753329098823'
          - original_content
        desc: ''
        model:
          completion_params:
            frequency_penalty: 0.5
            presence_penalty: 0.5
            response_format: json_schema
            temperature: 0.2
            top_p: 0.75
          mode: chat
          name: gpt-4.1-mini
          provider: langgenius/openai/openai
        prompt_template:
        - id: c23a50da-5eae-49db-85d1-822391e1ff4b
          role: system
          text: "You are an expert content analyzer. Your task is to process the following\
            \ text and return a structured JSON object containing a summary, keywords,\
            \ and a specific category classification. Remember you MUST use English\
            \ even if the input is in other languages.\n\nInstructions:\n1. Categorize:\
            \ Classify the text into ONE of the following two categories based on\
            \ its primary topic: \n* `study_room`: Content related to work, learning,\
            \ technology, productivity, books, science, or professional development.\
            \ \n* `kitchen`: Content related to food, cooking, recipes, nutrition,\
            \ restaurants, or kitchen equipment. \n2. If the content is primarily\
            \ a **recipe**, summarize it as a clear, step-by-step cooking guide. Focus\
            \ explicitly on ingredients, preparation methods, and cooking instructions.\
            \ \n3. If the content is related to **productivity, learning, insight,\
            \ or a quote**, summarize it as a concise, actionable idea or a thought-provoking\
            \ concept, similar to a brainstorming note. Focus on core principles,\
            \ actionable takeaways, inspiring thoughts, or potential connections.\
            \ \n4. **Crucially, ignore any promotional material, advertisements, fluff,\
            \ or irrelevant disclaimers** within the content; focus strictly on the\
            \ core informational value. \n5. Extract 3-5 relevant keywords that best\
            \ describe the content.\n\nInput Text: {{#1753329098823.original_content#}}"
        selected: false
        structured_output:
          schema:
            description: Defines the structured output for AI-processed content, including
              a summary, keywords, and a specific category.
            properties:
              ai_category:
                description: The category assigned to the content by the AI.
                enum:
                - study_room
                - kitchen
                type: string
              ai_keyword:
                description: An array of AI-extracted keywords from the content.
                items:
                  minLength: 1
                  type: string
                minItems: 1
                type: array
                uniqueItems: true
              ai_summarize:
                description: The organized content as required here...
                minLength: 50
                type: string
            required:
            - ai_summarize
            - ai_keyword
            - ai_category
            title: AI Content Organization
            type: object
        structured_output_enabled: true
        title: LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1753343604349'
      position:
        x: 685.9807510817069
        y: 291
      positionAbsolute:
        x: 685.9807510817069
        y: 291
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        agent_parameters:
          instruction:
            type: constant
            value: Call the web_scraper tool with the URL and summarize the content.
          model:
            type: constant
            value:
              completion_params:
                frequency_penalty: 0.5
                presence_penalty: 0.5
                response_format: text
                temperature: 0.2
                top_p: 0.75
              mode: chat
              model: gpt-4.1-mini
              model_type: llm
              provider: langgenius/openai/openai
              type: model-selector
          query:
            type: constant
            value: 'Using the web_scraper tool, extract the text content from this
              webpage: {{#1753329098823.original_content#}}. You MUST summarize within
              1000 characters.


              Remember, you are providing information for the user. If the website
              is about a recipe, you should include complete steps for the dish instead
              of ignoring some details. If the website is about a product or idea,
              you don''t need to write too much on other topics like the website footer
              or what.'
          tools:
            type: constant
            value:
            - enabled: true
              extra:
                description: A tool for scraping webpages.
              parameters:
                url:
                  auto: 1
                  value: null
              provider_name: webscraper
              provider_show_name: webscraper
              schemas:
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: used for linking to webpages
                  ja_JP: used for linking to webpages
                  pt_BR: used for linking to webpages
                  zh_Hans: 用于链接到网页
                label:
                  en_US: URL
                  ja_JP: URL
                  pt_BR: URL
                  zh_Hans: 网页链接
                llm_description: url for scraping
                max: null
                min: null
                name: url
                options: []
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
                  (KHTML, like Gecko) Chrome/100.0.1000.0 Safari/537.36
                form: form
                human_description:
                  en_US: used for identifying the browser.
                  ja_JP: used for identifying the browser.
                  pt_BR: used for identifying the browser.
                  zh_Hans: 用于识别浏览器。
                label:
                  en_US: User Agent
                  ja_JP: User Agent
                  pt_BR: User Agent
                  zh_Hans: User Agent
                llm_description: null
                max: null
                min: null
                name: user_agent
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: 'false'
                form: form
                human_description:
                  en_US: If true, the crawler will only return the page summary content.
                  ja_JP: If true, the crawler will only return the page summary content.
                  pt_BR: If true, the crawler will only return the page summary content.
                  zh_Hans: 如果启用，爬虫将仅返回页面摘要内容。
                label:
                  en_US: Whether to generate summary
                  ja_JP: Whether to generate summary
                  pt_BR: Whether to generate summary
                  zh_Hans: 是否生成摘要
                llm_description: null
                max: null
                min: null
                name: generate_summary
                options:
                - icon: null
                  label:
                    en_US: 'Yes'
                    ja_JP: 'Yes'
                    pt_BR: 'Yes'
                    zh_Hans: 是
                  value: 'true'
                - icon: null
                  label:
                    en_US: 'No'
                    ja_JP: 'No'
                    pt_BR: 'No'
                    zh_Hans: 否
                  value: 'false'
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: boolean
              settings:
                generate_summary:
                  value:
                    type: constant
                    value: true
                user_agent:
                  value:
                    type: mixed
                    value: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/100.0.1000.0 Safari/537.36
              tool_description: A tool for scraping webpages.
              tool_label: Web Scraper
              tool_name: webscraper
              type: builtin
        agent_strategy_label: FunctionCalling
        agent_strategy_name: function_calling
        agent_strategy_provider_name: langgenius/agent/agent
        desc: ''
        meta:
          minimum_dify_version: 1.7.0
          version: 0.0.2
        output_schema: null
        plugin_unique_identifier: langgenius/agent:0.0.22@93bb2520bf578b9b369441db235f9bc8abdfd7a9936f9b86d7c97ef99a7ed4b2
        selected: false
        title: Agent
        tool_node_version: '2'
        type: agent
      height: 197
      id: '1753343607664'
      position:
        x: 692.0746050247798
        y: 410
      positionAbsolute:
        x: 692.0746050247798
        y: 410
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1753343604349'
          - structured_output
          value_type: object
          variable: output
        selected: false
        title: End
        type: end
      height: 89
      id: '1753345039607'
      position:
        x: 1138.8513016450029
        y: 291
      positionAbsolute:
        x: 1138.8513016450029
        y: 291
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1753347678833'
          - structured_output
          value_type: object
          variable: output
        selected: false
        title: End 2
        type: end
      height: 89
      id: '1753345292270'
      position:
        x: 1352.2058482166497
        y: 423.928809012738
      positionAbsolute:
        x: 1352.2058482166497
        y: 423.928809012738
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            frequency_penalty: 0.5
            presence_penalty: 0.5
            response_format: json_schema
            temperature: 0.2
            top_p: 0.75
          mode: chat
          name: gpt-4.1-mini
          provider: langgenius/openai/openai
        prompt_config:
          jinja2_variables: []
        prompt_template:
        - edition_type: basic
          id: 7055889b-b92d-4f2f-9c7f-cd8e22ec363e
          role: system
          text: "You are an expert content analyzer. Your task is to process the following\
            \ text and return a structured JSON object containing a summary, keywords,\
            \ and a specific category classification. Remember you MUST use English\
            \ even if the input is in other languages.\n\nInstructions:\n1. Categorize:\
            \ Classify the text into ONE of the following two categories based on\
            \ its primary topic: \n* `study_room`: Content related to work, learning,\
            \ technology, productivity, books, science, or professional development.\
            \ \n* `kitchen`: Content related to food, cooking, recipes, nutrition,\
            \ restaurants, or kitchen equipment. \n2. If the content is primarily\
            \ a **recipe**, summarize it as a clear, step-by-step cooking guide. Focus\
            \ explicitly on ingredients, preparation methods, and cooking instructions.\
            \ \n3. If the content is related to **productivity, learning, insight,\
            \ or a quote**, summarize it as a concise, actionable idea or a thought-provoking\
            \ concept, similar to a brainstorming note. Focus on core principles,\
            \ actionable takeaways, inspiring thoughts, or potential connections.\
            \ \n4. **Crucially, ignore any promotional material, advertisements, fluff,\
            \ or irrelevant disclaimers** within the content; focus strictly on the\
            \ core informational value. \n5. Extract 3-5 relevant keywords that best\
            \ describe the content.\n\nInput Text: {{#1753343607664.text#}}"
        selected: false
        structured_output:
          schema:
            description: Defines the structured output for AI-processed content, including
              a summary, keywords, and a specific category.
            properties:
              ai_category:
                description: The category assigned to the content by the AI.
                enum:
                - study_room
                - kitchen
                type: string
              ai_keyword:
                description: An array of AI-extracted keywords from the content.
                items:
                  minLength: 1
                  type: string
                minItems: 1
                type: array
                uniqueItems: true
              ai_summarize:
                description: The organized content as required here...
                minLength: 50
                type: string
            required:
            - ai_summarize
            - ai_keyword
            - ai_category
            title: AI Content Organization
            type: object
        structured_output_enabled: true
        title: LLM 2
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1753347678833'
      position:
        x: 1031.843240923676
        y: 477.07769345997053
      positionAbsolute:
        x: 1031.843240923676
        y: 477.07769345997053
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 81.41905140145946
      y: 8.1152017900652
      zoom: 0.659753955386447
